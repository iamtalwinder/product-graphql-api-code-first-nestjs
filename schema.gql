# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
Represents a product in the system, including details like name, SKU, price, and category.
"""
type Product {
  """Unique identifier of the entity."""
  _id: ID!

  """The name of the product."""
  name: String!

  """A unique stock keeping unit identifier for the product."""
  sku: String!

  """An optional description of the product."""
  description: String

  """The price of the product."""
  price: Float!

  """The category of the product. Optional."""
  category: String

  """A list of image URLs for the product. Optional."""
  images: [String]

  """A list of tags associated with the product. Optional."""
  tags: [String]

  """The date and time when the product was created."""
  createdAt: DateTime!

  """The date and time when the product was last updated."""
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""User entity representing a registered user."""
type User {
  """Unique identifier of the entity."""
  _id: ID!

  """The unique email address of the user."""
  email: String!

  """The first name of the user."""
  firstName: String!

  """The last name of the user."""
  lastName: String!

  """The role of the user in the system."""
  role: UserRole!
}

"""
Defines the role of a user within the system and their respective permissions.
"""
enum UserRole {
  """A customer who can view and purchase products and view their orders."""
  customer

  """
  An administrator with full privileges, including managing users and roles.
  """
  admin

  """
  A manager with administrative capabilities, except for creating or managing admins or other managers.
  """
  manager

  """
  An anonymous user who can only view products but cannot make purchases.
  """
  anonymous
}

"""
Output type for getting a list of products. Includes the products and the total count.
"""
type GetProductsOutput {
  """The list of retrieved products."""
  documents: [Product!]!

  """
  The total count of products available, considering the applied filters.
  """
  totalCount: Float!
}

"""
Represents an item in an order, including the product, quantity, and price.
"""
type OrderItem {
  """The product included in the order item."""
  product: Product!

  """The quantity of the product ordered."""
  quantity: Int!

  """The price of the product at the time of the order."""
  price: Float!
}

"""
Represents an order placed by a user, including details like products, shipping address, and status.
"""
type Order {
  """Unique identifier of the entity."""
  _id: ID!

  """Resolve the user details for an order."""
  user: User!

  """The list of items included in the order."""
  products: [OrderItem!]!

  """The shipping address for the order."""
  shippingAddress: String!

  """The current status of the order."""
  status: OrderStatus!

  """The date and time when the order was created."""
  createdAt: DateTime!

  """The date and time when the order was last updated."""
  updatedAt: DateTime!

  """Resolve the product details for an order item."""
  product: Product!
}

"""The status of an order through its lifecycle."""
enum OrderStatus {
  """Order has been placed but not yet processed."""
  Pending

  """Order has been confirmed."""
  Confirmed

  """Order has been packed and is ready for shipping."""
  Packed

  """Order has been shipped and is in transit."""
  Shipped

  """Order has been delivered to the recipient."""
  Delivered

  """Order has been cancelled."""
  Cancelled
}

"""
Represents a location within an inventory, including details like location name, warehouse address, and quantity of items.
"""
type InventoryLocation {
  """The name of the inventory location."""
  locationName: String!

  """The address of the warehouse associated with this location."""
  warehouseAddress: String!

  """The quantity of the specific item available at this location."""
  quantity: Int!

  """The manager responsible for this inventory location. Optional."""
  manager: String

  """Additional notes about the inventory location. Optional."""
  notes: String
}

"""
Represents the inventory of a product, including all locations where the product is stored.
"""
type Inventory {
  """Unique identifier of the entity."""
  _id: ID!

  """The product associated with this inventory."""
  product: Product!

  """A list of locations where the product is stored."""
  inventoryLocations: [InventoryLocation!]!
}

"""
Output type for retrieving a list of inventory records, including documents and total count.
"""
type GetInventoryOutput {
  """The list of retrieved inventory records."""
  documents: [Inventory!]!

  """
  The total count of inventory records available, considering the applied filters.
  """
  totalCount: Float!
}

"""
Output type for retrieving orders. Includes a list of orders and the total count.
"""
type GetOrdersOutput {
  """The list of retrieved orders."""
  documents: [Order!]!

  """The total count of orders available, considering the applied filters."""
  totalCount: Float!
}

"""
Output type for authentication tokens, including access and refresh tokens.
"""
type AuthTokenOutput {
  """JWT access token for authentication."""
  accessToken: String!

  """JWT refresh token for generating new access tokens."""
  refreshToken: String!
}

"""
Output type for creating a new user, omitting sensitive information like password.
"""
type CreateUserOutput {
  """Unique identifier of the entity."""
  _id: ID!

  """The unique email address of the user."""
  email: String!

  """The first name of the user."""
  firstName: String!

  """The last name of the user."""
  lastName: String!

  """The role assigned to the created user."""
  role: UserRole!
}

type Query {
  """Retrieve a list of products with optional filters."""
  getProducts(
    """Filter options for products."""
    filter: ProductFilterInput

    """Page number for pagination."""
    page: Int = 1

    """Number of products per page."""
    limit: Int = 20
  ): GetProductsOutput!

  """Retrieve a single product by its unique identifier."""
  getProductById(
    """The unique identifier of the product."""
    id: String!
  ): Product!

  """Get orders placed by the currently authenticated user."""
  getUserOrders(
    """Page number for pagination."""
    page: Int = 1

    """Number of orders per page."""
    limit: Int = 20
  ): GetOrdersOutput!

  """Get all orders in the system. Restricted to admins and managers."""
  getAllOrders(
    """Page number for pagination."""
    page: Int = 1

    """Number of orders per page."""
    limit: Int = 20
  ): GetOrdersOutput!

  """Retrieve a list of inventory items with optional filters."""
  getInventory(
    """Filter options for inventory items."""
    filter: InventoryFilterInput

    """Page number for pagination."""
    page: Int

    """Number of inventory items per page."""
    limit: Int
  ): GetInventoryOutput!

  """Retrieve a single inventory item by its ID."""
  getInventoryById(
    """The unique identifier of the inventory item."""
    id: String!
  ): Inventory!
}

"""
Input type for filtering products. Allows partial specification of product fields, excluding images and tags.
"""
input ProductFilterInput {
  """The name of the product."""
  name: String

  """A unique stock keeping unit identifier for the product."""
  sku: String

  """An optional description of the product."""
  description: String

  """The price of the product."""
  price: Float

  """The category of the product. Optional."""
  category: String
}

"""Input type for filtering inventory records by product ID."""
input InventoryFilterInput {
  """The unique identifier of the product to filter inventory records."""
  product: String!
}

type Mutation {
  """Create a new product."""
  createProduct(
    """The data used to create a new product."""
    createProductInput: CreateProductInput!
  ): Product!

  """Update an existing product."""
  updateProduct(
    """The unique identifier of the product to be updated."""
    id: String!

    """The new details to update the product with."""
    updateProductInput: UpdateProductInput!
  ): Product!

  """Delete a product."""
  deleteProduct(
    """The unique identifier of the product to be deleted."""
    id: String!
  ): Boolean!

  """Place a new order with the given details."""
  placeOrder(
    """Input data for placing a new order."""
    placeOrderInput: PlaceOrderInput!
  ): Order!

  """Create a new inventory item with the specified details."""
  createInventory(
    """Input data for creating a new inventory item."""
    createInventoryInput: CreateInventoryInput!
  ): Inventory!

  """Update an existing inventory item identified by its ID."""
  updateInventory(
    """The unique identifier of the inventory item to be updated."""
    id: String!

    """The new details to update the inventory item with."""
    updateInventoryInput: UpdateInventoryInput!
  ): Inventory!

  """Delete an inventory item identified by its ID."""
  deleteInventory(
    """The unique identifier of the inventory item to be deleted."""
    id: String!
  ): Boolean!

  """Register a new user and return authentication tokens."""
  register(
    """Input data for user registration."""
    registerInput: RegisterInput!
  ): AuthTokenOutput!

  """Authenticate a user and return authentication tokens."""
  login(
    """Input data for user login."""
    loginInput: LoginInput!
  ): AuthTokenOutput!

  """Issue an anonymous authentication token for non-registered users."""
  issueAnonymousToken: AuthTokenOutput!

  """Create a new user. Restricted to admin users."""
  createUser(
    """Input data for creating a new user."""
    createUserInput: CreateUserInput!
  ): CreateUserOutput!
}

"""Input type for creating a new product."""
input CreateProductInput {
  """The name of the product."""
  name: String!

  """A unique stock keeping unit identifier for the product."""
  sku: String!

  """An optional description of the product."""
  description: String

  """The price of the product."""
  price: Float!

  """The category of the product. Optional."""
  category: String

  """A list of image URLs for the product. Optional."""
  images: [String]

  """A list of tags associated with the product. Optional."""
  tags: [String]
}

"""Input type for partially updating product details."""
input UpdateProductInput {
  """The name of the product."""
  name: String

  """A unique stock keeping unit identifier for the product."""
  sku: String

  """An optional description of the product."""
  description: String

  """The price of the product."""
  price: Float

  """The category of the product. Optional."""
  category: String

  """A list of image URLs for the product. Optional."""
  images: [String!]

  """A list of tags associated with the product. Optional."""
  tags: [String!]
}

"""
Input type for placing an order, including items to order and the shipping address.
"""
input PlaceOrderInput {
  """A list of items to be included in the order."""
  items: [OrderItemInput!]!

  """The shipping address for the order."""
  shippingAddress: String!
}

"""
Input type for specifying an item in an order, including the product ID and quantity.
"""
input OrderItemInput {
  """The unique identifier of the product."""
  productId: ID!

  """The quantity of the product to order."""
  quantity: Int!
}

"""Input type for creating a new inventory record."""
input CreateInventoryInput {
  """The unique identifier of the product."""
  product: ID!

  """List of inventory locations for the product."""
  inventoryLocations: [InventoryLocationInput!]!
}

"""
Input type for specifying a location in the inventory, including details like location name, address, and quantity.
"""
input InventoryLocationInput {
  """The name of the inventory location."""
  locationName: String!

  """The address of the warehouse associated with this location."""
  warehouseAddress: String!

  """The quantity of the specific item available at this location."""
  quantity: Int!

  """The manager responsible for this inventory location. Optional."""
  manager: String

  """Additional notes about the inventory location. Optional."""
  notes: String
}

"""Input type for partially updating inventory details."""
input UpdateInventoryInput {
  """The unique identifier of the product."""
  product: ID

  """List of inventory locations for the product."""
  inventoryLocations: [InventoryLocationInput!]
}

"""
Input type for user registration, including email, password, first name, and last name.
"""
input RegisterInput {
  """The user's email address."""
  email: String!

  """The user's password."""
  password: String!

  """The user's first name."""
  firstName: String!

  """The user's last name."""
  lastName: String!
}

"""Input type for user login, requiring email and password."""
input LoginInput {
  """The user's email address."""
  email: String!

  """The user's password."""
  password: String!
}

"""
Input type for creating a new user, extending the register input with user roles.
"""
input CreateUserInput {
  """The user's email address."""
  email: String!

  """The user's password."""
  password: String!

  """The user's first name."""
  firstName: String!

  """The user's last name."""
  lastName: String!

  """The role assigned to the new user."""
  role: UserRole!
}