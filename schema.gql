# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Product {
  _id: ID!
  name: String!
  sku: String!
  description: String
  price: Float!
  category: String
  images: [String]
  tags: [String]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GetProductsOutput {
  documents: [Product!]!
  totalCount: Float!
}

type Order {
  id: ID!
  items: [Product!]!
  orderDate: DateTime!
  totalPrice: Float!
  status: String!
}

type AuthTokenOutput {
  accessToken: String!
  refreshToken: String!
}

type CreateUserOutput {
  _id: ID!
  email: String!
  firstName: String!
  lastName: String!
  role: UserRole!
}

enum UserRole {
  customer
  admin
  manager
  anonymous
}

type InventoryLocation {
  locationName: String!
  warehouseAddress: String!
  quantity: Int!
  manager: String
  notes: String
}

type Inventory {
  _id: ID!
  product: Product!
  inventoryLocations: [InventoryLocation!]!
}

type GetInventoryOutput {
  documents: [Inventory!]!
  totalCount: Float!
}

type Query {
  getProducts(filter: ProductFilterInput, page: Int, limit: Int): GetProductsOutput!
  getProductById(id: String!): Product!
  order(id: String!): Order!
  orders: [Order!]!
  getInventory(filter: InventoryFilterInput, page: Int, limit: Int): GetInventoryOutput!
  getInventoryById(id: String!): Inventory!
}

input ProductFilterInput {
  name: String
  sku: String
  description: String
  price: Float
  category: String
}

input InventoryFilterInput {
  product: String!
}

type Mutation {
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(id: String!, updateProductInput: UpdateProductInput!): Product!
  deleteProduct(id: String!): Boolean!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  updateOrderStatus(updateOrderStatusInput: UpdateOrderStatusInput!): Order!
  deleteOrder(id: String!): Boolean!
  register(registerInput: RegisterInput!): AuthTokenOutput!
  login(loginInput: LoginInput!): AuthTokenOutput!
  issueAnonymousToken: AuthTokenOutput!
  createUser(createUserInput: CreateUserInput!): CreateUserOutput!
  createInventory(createInventoryInput: CreateInventoryInput!): Inventory!
  updateInventory(id: String!, updateInventoryInput: UpdateInventoryInput!): Inventory!
  deleteInventory(id: String!): Boolean!
}

input CreateProductInput {
  name: String!
  sku: String!
  description: String
  price: Float!
  category: String
  images: [String]
  tags: [String]
}

input UpdateProductInput {
  name: String
  sku: String
  description: String
  price: Float
  category: String
  images: [String!]
  tags: [String!]
}

input CreateOrderInput {
  id: ID!
  itemIds: [String!]!
  orderDate: DateTime!
  totalPrice: Float!
  status: String!
}

input UpdateOrderStatusInput {
  id: ID!
  status: String!
}

input RegisterInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateUserInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  role: UserRole!
}

input CreateInventoryInput {
  product: ID!
  inventoryLocations: [InventoryLocationInput!]!
}

input InventoryLocationInput {
  locationName: String!
  warehouseAddress: String!
  quantity: Int!
  manager: String
  notes: String
}

input UpdateInventoryInput {
  product: ID
  inventoryLocations: [InventoryLocationInput!]
}